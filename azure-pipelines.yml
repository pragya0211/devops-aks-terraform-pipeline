trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

# Define Variables
variables:
- name: DEV_ENVIRONMENT
  value: dev 
- name: QA_ENVIRONMENT
  value: qa

stages:
  - stage: terraformValidate
    jobs:
      - job: terraformValidate
        continueOnError: true
        steps:
         - task: PublishPipelineArtifact@1
           inputs:
             targetPath: '$(Pipeline.Workspace)'
             artifact: '$(System.DefaultWorkingDirectory)/terraform'
             publishLocation: 'pipeline'
         - task: TerraformInstaller@2
           inputs:
             terraformVersion: 'latest'
         - task: TerraformCLI@2
           inputs:
             command: 'init'
             backendType: 'azurerm'
             backendServiceArm: 'azuredevops_azurerm_svc'
             backendAzureRmTenantId: '7f5d0ec3-9d25-483c-a6c6-39e56fd9db66'
             backendAzureRmSubscriptionId: 'bff82eda-d9d9-4e19-bb6e-e0aeb60c5ad7'
             backendAzureRmResourceGroupName: 'terraform'
             backendAzureRmStorageAccountName: 'terraformstatefileaccoun'
             backendAzureRmContainerName: 'tfstate'
             backendAzureRmKey: 'aks-test.tfstate'
             allowTelemetryCollection: true
         - task: TerraformCLI@2
           inputs:
             command: 'validate'
             allowTelemetryCollection: true

